[
  {
    "title": "MariaDB",
    "imageUrl": "https://noticon-static.tammolo.com/dgggcrkxq/image/upload/v1579928281/noticon/wfykhuhsg5hfddh6ok0o.png",
    "description": [
      "MariaDB는 팀프로젝트 ERP 진행 시 데이터들을 정리 하는 것으로 사용해보았습니다. 제가 맡은 부분은 장바구니와 결제, 바로구매 부분을 담당 하였습니다. 해당 부분을 진행하며 각자의 테이블에서 서로 참조하여 가격을 계산하고 결제 시 상품의 갯수 데이터가 줄어드는 부분에서 많은 공부와 많은 시행 착오를 겪었습니다. 장바구니 테이블과 상품 테이블이 서로 컬럼의 이름이 같지 않을 시에 결제페이지에서 상품 관련한 데이터를 가져 오지 못하는 경험을 해보았습니다.",
      "관계형 데이터베이스를 사용하여 데이터베이스 테이블간에 서로 참조를 하며 데이터베이스의 쿼리를 이해 하고 사용이 가능합니다."
    ]
  },
  {
    "title": "Mysql",
    "imageUrl": "https://noticon-static.tammolo.com/dgggcrkxq/image/upload/v1603423163/noticon/az0cvs28lm7gxoowlsva.png",
    "description": [
      "개인 프로젝트를 진행하며 로그인과회원가입의 유저의 데이터와 게시판의 게시글과 댓글 채팅의 내용을 데이터에 저장하는 방식을 사용 할 때 해당 Mysql을 사용해보았습니다.",
      "관계형 데이터베이스를 사용하여 데이터베이스 테이블간에 서로 참조를 하며 데이터베이스의 쿼리를 이해 하고 사용이 가능합니다."
    ]
  },
  {
    "title": "RDS RDS",
    "imageUrl": "https://noticon-static.tammolo.com/dgggcrkxq/image/upload/v1683592944/noticon/plcvyiwmdh4adlt8dxgo.png",
    "description": [
      "팀 프로젝트 또는 개인 프로젝트에서 사용하였으며 팀 프로젝트 진행시 매번 각자 데이터베이스를 관리 하는 와중에 쿼리문이 변경 되거나 새로운 데이터베이스 테이블이 생성 될 경우 데이터베이스 혼동 및 심지어 삭제까지 하는 일이 발생하자 aws의 RDS를 도입 하였고 더이상 데이터베이스의 컬럼이나 테이블이 변경 되어도 문제가 생기는 일이 없었습니다.",
      "관계형 데이터베이스를 사용하여 데이터베이스 테이블간에 서로 참조를 하며 데이터베이스의 쿼리를 이해 하고 사용이 가능합니다."
    ]
  },
  {
    "title": "AWS S3",
    "imageUrl": "https://noticon-static.tammolo.com/dgggcrkxq/image/upload/v1567064876/noticon/sb5llmvfubuceldbkmx8.png",
    "description": [
      "개인프로젝트에서 EC2와 LightSail로 인스턴스를 생성 하여 서버 배포를 하였습니다. 배포시 문제가 생겼던 vpc의 보안 연결 RDS와의 데이터베이스 연결 인스턴스를 생성하고 관리 하며 리눅스와 우분투 또한 학습을 진행하기 좋은 사례였다고 생각합니다. 여러건의 인스턴스를 제작하여 EC2의 원활한 연결과 사용이 가능합니다."
    ]
  },
  {
    "title": "Json",
    "imageUrl": "https://noticon-static.tammolo.com/dgggcrkxq/image/upload/v1611712681/noticon/szv75x8vgi6axjwjfvd6.png",
    "description": ["Json으로 정적이고 변화가 적은 데이터들을 관리하는 방식으로 사용하였습니다. 변화가 있거나 업데이트가 될 만한 데이터들은 다른 데이터베이스를 사용하는 방식으로 진행했습니다."]
  }
]
